plugins {
  id "com.android.application"
  id "kotlin-android"
  id "kotlin-kapt"
  id "dagger.hilt.android.plugin"

  id "jacoco"
  // junit5 doesn't support android projects out of the box
  id "de.mannodermaus.android-junit5"
}

android {
  compileSdkVersion 30

  defaultConfig {
    applicationId "dev.rivu.mvijetpackcomposedemo"
    minSdkVersion 24
    targetSdkVersion 30
    versionCode 1
    versionName "1.0"

    testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    testInstrumentationRunnerArgument "runnerBuilder", "de.mannodermaus.junit5.AndroidJUnit5Builder"

    buildConfigField("String", "ApiKey", "\"cd4ff600\"")
    buildConfigField("String", "BASE_URL", "\"https://www.omdbapi.com/\"")
  }

  buildTypes {
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
    }
  }

  composeOptions {
    kotlinCompilerVersion "1.4.31"
    kotlinCompilerExtensionVersion "$compose_version"
  }

  buildFeatures {
    compose true
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }

  kotlinOptions {
    jvmTarget = '1.8'
  }

  testOptions {
    junitPlatform {
      filters {
        engines {
          include 'spek2'
        }
      }
      jacocoOptions {
        // here goes all jacoco config, for example
        html.enabled = true
        xml.enabled = false
        csv.enabled = false
      }
    }
    unitTests.all {
      testLogging.events = ["passed", "skipped", "failed"]
    }
  }

  packagingOptions {
    exclude("META-INF/LICENSE")
    exclude("META-INF/LICENSE.md")
    exclude("META-INF/LICENSE-notice.md")
    exclude("META-INF/NOTICE")
    exclude("META-INF/ASL2.0")
    exclude("META-INF/LICENSE.txt")
    exclude("META-INF/NOTICE.txt")
    exclude("META-INF/LICENSE-FIREBASE.txt")
    exclude("META-INF/DEPENDENCIES.txt")
    exclude("META-INF/rxkotlin.properties")
    exclude("META-INF/AL2.0")
    exclude("META-INF/LGPL2.1")
  }
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
  kotlinOptions {
    jvmTarget = "1.8"
  }
}

dependencies {
  implementation fileTree(dir: "libs", include: ["*.jar"])
  implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
  implementation 'androidx.core:core-ktx:1.3.2'
  implementation 'androidx.appcompat:appcompat:1.3.0-beta01'
  implementation 'androidx.lifecycle:lifecycle-reactivestreams-ktx:2.3.0'

  implementation "androidx.compose.runtime:runtime:$compose_version"
  implementation "androidx.compose.runtime:runtime-livedata:$compose_version"
  implementation "androidx.compose.runtime:runtime-rxjava3:$compose_version"
  implementation "androidx.compose.compiler:compiler:$compose_version"
  implementation "androidx.compose.foundation:foundation:$compose_version"
  implementation "androidx.compose.ui:ui:$compose_version"
  implementation "androidx.compose.ui:ui-tooling:$compose_version"
  implementation "androidx.compose.material:material:$compose_version"

  implementation "androidx.compose.foundation:foundation-layout:$compose_version"

  implementation "androidx.constraintlayout:constraintlayout-compose:1.0.0-alpha04"

  implementation "com.google.dagger:hilt-android:$dagger_hilt_version"
  kapt "com.google.dagger:hilt-android-compiler:$dagger_hilt_version"
  implementation "androidx.hilt:hilt-lifecycle-viewmodel:$dagger_hilt_androidx_version"
  kapt "androidx.hilt:hilt-compiler:$dagger_hilt_androidx_version"
  implementation "androidx.core:core-ktx:1.3.2"
  implementation "androidx.activity:activity-ktx:1.2.1"

  //RxJava
  implementation "io.reactivex.rxjava3:rxjava:3.0.4"
  implementation "io.reactivex.rxjava3:rxandroid:3.0.0"

  //Retrofit
  implementation "com.squareup.retrofit2:retrofit:2.9.0"
  implementation "com.squareup.okhttp3:logging-interceptor:4.5.0"
  implementation "com.squareup.retrofit2:converter-gson:2.9.0"
  implementation "com.github.akarnokd:rxjava3-retrofit-adapter:3.0.0"

  implementation "com.airbnb.android:lottie-compose:1.0.0-alpha07-SNAPSHOT"

  implementation 'dev.chrisbanes.accompanist:accompanist-coil:0.6.1'

  //Timber
  implementation "com.jakewharton.timber:timber:4.7.1"

  //Test
  implementation "org.mockito:mockito-core:3.3.3"
  implementation "com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0"
  androidTestImplementation "org.mockito:mockito-android:3.3.3"
  // assertion
  testImplementation "org.jetbrains.kotlin:kotlin-test:$kotlin_version"

  // spek2
  testImplementation "org.spekframework.spek2:spek-dsl-jvm:$spek_version"
  testImplementation "org.spekframework.spek2:spek-runner-junit5:$spek_version"
  testImplementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

  //Android Test
  androidTestImplementation 'androidx.test.ext:junit:1.1.1'
  androidTestImplementation "androidx.test:runner:1.2.0"
  androidTestImplementation "de.mannodermaus.junit5:android-test-core:1.0.0"
  androidTestRuntimeOnly "de.mannodermaus.junit5:android-test-runner:1.0.0"

  testImplementation("junit:junit:4.13")
  androidTestImplementation("androidx.test:rules:1.2.0")
  androidTestImplementation("androidx.test:runner:1.2.0")
  androidTestImplementation("androidx.compose.ui:ui-test:$compose_version")
  androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"

  implementation "androidx.activity:activity-compose:1.3.0-alpha04"

  //Room DB
  def room_version = "2.3.0-alpha03"

  implementation "androidx.room:room-runtime:$room_version"
  implementation "androidx.room:room-ktx:$room_version"
  implementation "androidx.room:room-rxjava3:$room_version"
  kapt "androidx.room:room-compiler:$room_version"
}